@page
@model MacroFit.Pages.IndexModel
@if (Model.LoginCheck)
{



    <div class="container my-5">
        <h1 class="text-center mb-4">Food Macronutrient Search Engine</h1>
        <div class="input-group mb-3">
            <input type="text" class="form-control" id="search-input" placeholder="Search food...">
            <button class="btn btn-primary" id="search-button">Search</button>
        </div>
        <div id="loading" class="d-none text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <div id="error-message" class="d-none alert alert-danger"></div>
        <div id="empty-message" class="d-none alert alert-warning">No results found.</div>
        <ul id="results-list" class="list-group"></ul>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const searchInput = $('#search-input');
        const searchButton = $('#search-button');
        const resultsList = $('#results-list');
        const loading = $('#loading');
        const errorMessage = $('#error-message');
        const emptyMessage = $('#empty-message');

        searchButton.on('click', () => {
            const query = searchInput.val();
            if (query.length >= 3) {
                searchFoods(query);
            } else {
                errorMessage.text('Invalid query parameter').removeClass('d-none');
            }
        });

        async function searchFoods(query) {
            errorMessage.addClass('d-none');
            emptyMessage.addClass('d-none');
            resultsList.empty();
            loading.removeClass('d-none');

            try {



                const response = await fetch(`http://localhost:44391/api/search/list/${query}`);
                console.log(response);
                if (response.ok) {
                    const foods = await response.json();
                    console.log(food);
                    if (foods.length === 0) {
                        emptyMessage.removeClass('d-none');
                    } else {
                        displayResults(foods);
                    }
                } else {
                    errorMessage.text('An error occurred while fetching data. Please try again.').removeClass('d-none');
                }
            } catch (error) {
                errorMessage.text('An error occurred while fetching data. Please try again.').removeClass('d-none');
            } finally {
                loading.addClass('d-none');
            }
        }

        function displayResults(foods) {
            foods.forEach(food => {
                const listItem = $('<li>', { class: 'list-group-item' });
                listItem.append($('<h5>', { text: food.Name }));
                listItem.append($('<p>', { text: `Calories: ${food.Calories} kcal` }));
                listItem.append($('<p>', { text: `Protein: ${food.Protein} g` }));
                listItem.append($('<p>', { text: `Carbohydrates: ${food.Carbohydrates} g` }));
                listItem.append($('<p>', { text: `Fat: ${food.Fat} g` }));
                listItem.append($('<p>', { text: `Saturated Fat: ${food.FatSat} g` }));
                listItem.append($('<p>', { text: `Fiber: ${food.Fibre} g` }));
                listItem.append($('<p>', { text: `Sugar: ${food.Sugar} g` }));
                listItem.append($('<p>', { text: `Sodium: ${food.Sodium} g` }));
                listItem.append($('<p>', { text: `Serving Size: ${food.ServingSize} ${food.FoodUnit.SymbolName}` }));
                resultsList.append(listItem);
            });
        }


        function searchApi(searchTerm) {
            $.ajax({
                url: apiUrl + searchTerm,
                type: 'GET',
                success: function (data) {
                    if (data.length > 0) {
                        var resultsHtml = '';
                        $.each(data, function (index, item) {
                            resultsHtml += '<div class="card mb-3">';
                            resultsHtml += '<div class="card-body">';
                            resultsHtml += '<h5 class="card-title">' + item.name + '</h5>';
                            resultsHtml += '<p class="card-text">Barcode: ' + item.barcode + '</p>';
                            resultsHtml += '<p class="card-text">Serving Size: ' + item.servingSize + ' ' + item.foodUnit.symbolName + '</p>';
                            resultsHtml += '<p class="card-text">Calories: ' + item.calories + '</p>';
                            resultsHtml += '<p class="card-text">Protein: ' + item.protein + ' g</p>';
                            resultsHtml += '<p class="card-text">Carbohydrates: ' + item.carbohydrates + ' g</p>';
                            resultsHtml += '<p class="card-text">Fat: ' + item.fat + ' g</p>';
                            resultsHtml += '<p class="card-text">Saturated Fat: ' + item.fatSat + ' g</p>';
                            resultsHtml += '<p class="card-text">Fibre: ' + item.fibre + ' g</p>';
                            resultsHtml += '<p class="card-text">Sugar: ' + item.sugar + ' g</p>';
                            resultsHtml += '<p class="card-text">Sodium: ' + item.sodium + ' g</p>';
                            resultsHtml += '</div>';
                            resultsHtml += '</div>';
                        });
                        searchResults.html(resultsHtml);
                    } else {
                        searchResults.html('<p>No food products found.</p><button class="btn btn-primary" type="button" id="add-data-btn">Add Data Manually</button>');
                    }
                },
                error: function () {
                    searchResults.html('<p>Error retrieving search results.</p>');
                }
            });
        }
    </script>

    <div class="row">
        <div class="col-lg-6">
            <div class="card" style="width:100%;">
                <p>Last Name: @Model.UserDetails[0].LastName</p><br>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card" style="width:100%;">
                <p>Last Name: @Model.UserDetails[0].LastName</p><br>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card" style="width:100%;">
                <p>Last Name: @Model.UserDetails[0].LastName</p><br>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card" style="width:100%;">
                <p>Last Name: @Model.UserDetails[0].LastName</p><br>
            </div>
        </div>
    </div>


}
else
{
    <partial name="_IndexPartial" />
}
